<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:dataquality.reports="http://dataquality.reports" xmlns:orgomg.cwm.objectmodel.core="http:///orgomg/cwm/objectmodel/core.ecore" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_Y_7NgMaDEeqC87dzZRfK1A" name="Customer_Basic_Analysis" supplierDependency="_dmvdkP1rEeqkFIdyIp61ig" creationDate="2020-07-15T17:40:20.885+0800" defaultContext="Default">
    <clientDependency href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_gfbsAMaDEeqC87dzZRfK1A"/>
    <taggedValue xmi:id="_Y_7NgcaDEeqC87dzZRfK1A" tag="Status" value="development"/>
    <taggedValue xmi:id="_Y_7NgsaDEeqC87dzZRfK1A" tag="Author" value="marvin.teh@nfr.quandatics.com"/>
    <taggedValue xmi:id="_Y_7Ng8aDEeqC87dzZRfK1A" tag="Purpose" value=""/>
    <taggedValue xmi:id="_Y_7NhMaDEeqC87dzZRfK1A" tag="Description" value=""/>
    <taggedValue xmi:id="_Y_7NhcaDEeqC87dzZRfK1A" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_gfYosMaDEeqC87dzZRfK1A" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_gfYoscaDEeqC87dzZRfK1A" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_gfYossaDEeqC87dzZRfK1A" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_gff9cMaDEeqC87dzZRfK1A" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_Y_7NhsaDEeqC87dzZRfK1A">
      <connection href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_iccowMZ3EeqoCLtNa2E8UQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
    </context>
    <results xmi:id="_Y_7Nh8aDEeqC87dzZRfK1A">
      <resultMetadata xmi:id="_Y_7NiMaDEeqC87dzZRfK1A" executionDate="2020-10-12T11:46:40.556+0800" executionDuration="4667" message="Each column must have at least one indicator, please select some indicator(s) to compute on each column!" executionNumber="11" lastExecutionNumberOk="9"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_gfZPwMaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfZPwcaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EUsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM `demo_staging`.`customer` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hFSLEMaDEeqC87dzZRfK1A" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_hFSLEcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_hFSLEsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_hFSLE8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_gfZPwsaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfZPw8aDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EU8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM `demo_staging`.`customer` WHERE `CUST_ID` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hFpXcMaDEeqC87dzZRfK1A" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_hFpXccaDEeqC87dzZRfK1A" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_hFpXcsaDEeqC87dzZRfK1A" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_hFpXc8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_gfZPxMaDEeqC87dzZRfK1A" count="30" computed="true" distinctValueCount="30">
        <parameters xmi:id="_gfZPxcaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EVMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT DISTINCT `CUST_ID` FROM `demo_staging`.`customer` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hF7rUMaDEeqC87dzZRfK1A" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_hF7rUcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_hF7rUsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_hF7rU8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_gfZPxsaDEeqC87dzZRfK1A" count="30" computed="true" uniqueValueCount="30">
        <parameters xmi:id="_gfZPx8aDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EVcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT `CUST_ID`, COUNT(*) mycount FROM `demo_staging`.`customer`  GROUP BY `CUST_ID` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hGRCgMaDEeqC87dzZRfK1A" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_hGRCgcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_hGRCgsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_hGRCg8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_hGRChMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_hGRChcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hGRChsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_hGRCh8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hGRCiMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_hGRCicaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_gfZPyMaDEeqC87dzZRfK1A" count="30" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_gfZPycaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EVsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT `CUST_ID`, COUNT(*) mycount FROM `demo_staging`.`customer`  m  GROUP BY `CUST_ID` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hGhhMMaDEeqC87dzZRfK1A" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_hGhhMcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_hGhhMsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_hGhhM8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_hGhhNMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_hGhhNcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hGhhNsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_hGhhN8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hGhhOMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_hGhhOcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_gfZPysaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfZPy8aDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EV8aDEeqC87dzZRfK1A" body="SELECT COUNT(`CUST_ID`) FROM `demo_staging`.`customer` WHERE TRIM(`CUST_ID`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hGwKsMaDEeqC87dzZRfK1A" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_hGwKscaDEeqC87dzZRfK1A" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_hGwKssaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_hGwKs8aDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_hGwKtMaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hGwKtcaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_hGwKtsaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hGwKt8aDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_gfZPzMaDEeqC87dzZRfK1A">
        <parameters xmi:id="_gfZPzcaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_gfZPzsaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="240.0">
          <parameters xmi:id="_gfZPz8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP0MaDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EWMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(`CUST_ID`)), COUNT(`CUST_ID`) FROM `demo_staging`.`customer` WHERE (`CUST_ID` IS NOT NULL ) AND (TRIM(IFNULL(`CUST_ID`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hHB3gMaDEeqC87dzZRfK1A" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_hHB3gcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_hHB3gsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hHB3g8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hHB3hMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hHB3hcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hHB3hsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hHB3h8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hHB3iMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hHB3icaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hHB3isaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hHB3i8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hHB3jMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hHB3jcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hHB3jsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hHB3j8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_gfZP0caDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP0saDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP08aDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rYMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(`CUST_ID`)) FROM `demo_staging`.`customer` WHERE (`CUST_ID` IS NOT NULL ) AND (TRIM(IFNULL(`CUST_ID`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hHUycMaDEeqC87dzZRfK1A" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_hHUyccaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_hHUycsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hHUyc8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hHUydMaDEeqC87dzZRfK1A" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_hHUydcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hHUydsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hHUyd8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hHUyeMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hHUyecaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_hHUyesaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hHUye8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hHUyfMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hHUyfcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hHUyfsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hHUyf8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_gfZP1MaDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP1caDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP1saDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rYcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(`CUST_ID`)) FROM `demo_staging`.`customer` WHERE (`CUST_ID` IS NOT NULL ) AND (TRIM(IFNULL(`CUST_ID`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hHl4MMaDEeqC87dzZRfK1A" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_hHl4McaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_hHl4MsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hHl4M8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hHl4NMaDEeqC87dzZRfK1A" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hHl4NcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hHl4NsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hHl4N8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hHl4OMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hHl4OcaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hHl4OsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hHl4O8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hHl4PMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hHl4PcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hHl4PsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hHl4P8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_gfZP18aDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP2MaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP2caDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9raMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(`CUST_ID`)) FROM `demo_staging`.`customer` WHERE (`CUST_ID` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hKFykMaDEeqC87dzZRfK1A" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_hKFykcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_hKFyksaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hKFyk8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hKFylMaDEeqC87dzZRfK1A" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hKFylcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hKFylsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hKFyl8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hKFymMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hKFymcaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hKFymsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hKFym8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hKFynMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hKFyncaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hKFynsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_gfZP2saDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP28aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP3MaDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-ScMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(`CUST_ID`,''))) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`CUST_ID`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hKSm4MaDEeqC87dzZRfK1A" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_hKSm4caDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_hKSm4saDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hKSm48aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hKSm5MaDEeqC87dzZRfK1A" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hKSm5caDEeqC87dzZRfK1A" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hKSm5saDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hKSm58aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hKSm6MaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hKSm6caDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hKSm6saDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hKSm68aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hKSm7MaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hKSm7caDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hKSm7saDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hKSm78aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_gfZP3caDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP3saDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP38aDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SccaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(`CUST_ID`,''))) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hKgpUMaDEeqC87dzZRfK1A" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_hKgpUcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_hKgpUsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_hKgpU8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hKgpVMaDEeqC87dzZRfK1A" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hKgpVcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hKgpVsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hKgpV8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hKgpWMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hKgpWcaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hKgpWsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hKgpW8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hKgpXMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hKgpXcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hKgpXsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hKgpX8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_gfZP4MaDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP4caDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP4saDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rZcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(`CUST_ID`)) FROM `demo_staging`.`customer` WHERE (`CUST_ID` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hI44sMaDEeqC87dzZRfK1A" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_hI44scaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_hI44ssaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hI44s8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hI44tMaDEeqC87dzZRfK1A" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hI44tcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hI44tsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hI44t8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hI44uMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hI44ucaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hI44usaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hI44u8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hI44vMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hI44vcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hI44vsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_gfZP48aDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP5MaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP5caDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rZsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(`CUST_ID`,''))) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`CUST_ID`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hJQFEMaDEeqC87dzZRfK1A" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_hJQFEcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_hJQFEsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hJQFE8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hJQFFMaDEeqC87dzZRfK1A" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hJQFFcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hJQFFsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hJQFF8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hJQFGMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hJQFGcaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_hJQFGsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hJQFG8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hJQFHMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hJQFHcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hJQFHsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hJQFH8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_gfZP5saDEeqC87dzZRfK1A" computed="true" length="8">
          <parameters xmi:id="_gfZP58aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP6MaDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rZ8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(`CUST_ID`,''))) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hJtYEMaDEeqC87dzZRfK1A" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_hJtYEcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_hJtYEsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_hJtYE8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hJtYFMaDEeqC87dzZRfK1A" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hJtYFcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hJtYFsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hJtYF8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hJtYGMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hJtYGcaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hJtYGsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hJtYG8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hJtYHMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hJtYHcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hJtYHsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hJtYH8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_gfZP6caDEeqC87dzZRfK1A" count="30" computed="true" sumLength="240.0">
          <parameters xmi:id="_gfZP6saDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP68aDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rYsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(`CUST_ID`)), COUNT(*) FROM `demo_staging`.`customer` WHERE (`CUST_ID` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hH4MEMaDEeqC87dzZRfK1A" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_hH4MEcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_hH4MEsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hH4ME8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hH4MFMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hH4MFcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hH4MFsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hH4MF8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hH4MGMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hH4MGcaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hH4MGsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hH4MG8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hH4MHMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hH4MHcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hH4MHsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_gfZP7MaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="240.0">
          <parameters xmi:id="_gfZP7caDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP7saDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rY8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(`CUST_ID`,''))), COUNT(*) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`CUST_ID`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hINjQMaDEeqC87dzZRfK1A" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_hINjQcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_hINjQsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hINjQ8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hINjRMaDEeqC87dzZRfK1A" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hINjRcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hINjRsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hINjR8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hINjSMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hINjScaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hINjSsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hINjS8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hINjTMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hINjTcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hINjTsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hINjT8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_gfZP78aDEeqC87dzZRfK1A" count="30" computed="true" sumLength="240.0">
          <parameters xmi:id="_gfZP8MaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfZP8caDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6kMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9rZMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(`CUST_ID`,''))), COUNT(*) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hIiTYMaDEeqC87dzZRfK1A" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_hIiTYcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. "/>
            <taggedValue xmi:id="_hIiTYsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_hIi6cMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hIi6ccaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hIi6csaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hIi6c8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hIi6dMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hIi6dcaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hIi6dsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hIi6d8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hIi6eMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hIi6ecaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hIi6esaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hIi6e8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hIi6fMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_gfcTEcaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfcTEsaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EUMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM `demo_staging`.`customer` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hK0LUMaDEeqC87dzZRfK1A" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_hK0LUcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_hK0LUsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_hK0LU8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_gfcTE8aDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfcTFMaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-ScsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM `demo_staging`.`customer` WHERE `NRIC` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hLC00MaDEeqC87dzZRfK1A" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_hLC00caDEeqC87dzZRfK1A" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_hLC00saDEeqC87dzZRfK1A" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_hLC008aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_gfcTFcaDEeqC87dzZRfK1A" count="30" computed="true" distinctValueCount="30">
        <parameters xmi:id="_gfcTFsaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-Sc8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT DISTINCT `NRIC` FROM `demo_staging`.`customer` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hLReUMaDEeqC87dzZRfK1A" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_hLReUcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_hLReUsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_hLReU8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_gfcTF8aDEeqC87dzZRfK1A" count="30" computed="true" uniqueValueCount="30">
        <parameters xmi:id="_gfcTGMaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SdMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT `NRIC`, COUNT(*) mycount FROM `demo_staging`.`customer`  GROUP BY `NRIC` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hLikEMaDEeqC87dzZRfK1A" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_hLikEcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_hLikEsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_hLikE8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_hLikFMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_hLikFcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hLikFsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_hLikF8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hLikGMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_hLikGcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_gfcTGcaDEeqC87dzZRfK1A" count="30" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_gfcTGsaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SdcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT `NRIC`, COUNT(*) mycount FROM `demo_staging`.`customer`  m  GROUP BY `NRIC` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hLybsMaDEeqC87dzZRfK1A" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_hLybscaDEeqC87dzZRfK1A" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_hLybssaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_hLybs8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_hLybtMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_hLybtcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hLybtsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_hLybt8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hLybuMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_hLybucaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_gfcTG8aDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfcTHMaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SdsaDEeqC87dzZRfK1A" body="SELECT COUNT(`NRIC`) FROM `demo_staging`.`customer` WHERE TRIM(`NRIC`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hMBFMMaDEeqC87dzZRfK1A" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_hMBFMcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_hMBFMsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_hMBFM8aDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_hMBFNMaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hMBFNcaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_hMBFNsaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hMBFN8aDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_gfcTHcaDEeqC87dzZRfK1A">
        <parameters xmi:id="_gfcTHsaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_gfcTH8aDEeqC87dzZRfK1A" count="30" computed="true" sumLength="422.0">
          <parameters xmi:id="_gfcTIMaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTIcaDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-Sd8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(`NRIC`)), COUNT(`NRIC`) FROM `demo_staging`.`customer` WHERE (`NRIC` IS NOT NULL ) AND (TRIM(IFNULL(`NRIC`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hMXqgMaDEeqC87dzZRfK1A" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_hMXqgcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_hMXqgsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hMXqg8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hMXqhMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hMXqhcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hMXqhsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hMXqh8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hMXqiMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hMXqicaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hMXqisaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hMXqi8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hMXqjMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hMXqjcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hMXqjsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hMXqj8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_gfcTIsaDEeqC87dzZRfK1A" computed="true" length="15">
          <parameters xmi:id="_gfcTI8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTJMaDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SeMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(`NRIC`)) FROM `demo_staging`.`customer` WHERE (`NRIC` IS NOT NULL ) AND (TRIM(IFNULL(`NRIC`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hMtBsMaDEeqC87dzZRfK1A" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_hMtBscaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_hMtBssaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hMtBs8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hMtBtMaDEeqC87dzZRfK1A" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_hMtBtcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hMtBtsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hMtBt8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hMtBuMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hMtBucaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_hMtBusaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hMtBu8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hMtBvMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hMtBvcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hMtBvsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hMtBv8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_gfcTJcaDEeqC87dzZRfK1A" computed="true" length="14">
          <parameters xmi:id="_gfcTJsaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTJ8aDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SecaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(`NRIC`)) FROM `demo_staging`.`customer` WHERE (`NRIC` IS NOT NULL ) AND (TRIM(IFNULL(`NRIC`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hM8SQMaDEeqC87dzZRfK1A" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_hM8SQcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_hM8SQsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hM8SQ8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hM8SRMaDEeqC87dzZRfK1A" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hM8SRcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hM8SRsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hM8SR8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hM8SSMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hM8SScaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hM8SSsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hM8SS8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hM8STMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hM8STcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hM8STsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hM8ST8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_gfcTKMaDEeqC87dzZRfK1A" computed="true" length="14">
          <parameters xmi:id="_gfcTKcaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTKsaDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5hMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(`NRIC`)) FROM `demo_staging`.`customer` WHERE (`NRIC` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hO9EcMaDEeqC87dzZRfK1A" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_hO9EccaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_hO9EcsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hO9Ec8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hO9EdMaDEeqC87dzZRfK1A" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hO9EdcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hO9EdsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hO9Ed8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hO9EeMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hO9EecaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hO9EesaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hO9Ee8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hO9EfMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hO9EfcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hO9EfsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_gfcTK8aDEeqC87dzZRfK1A" computed="true" length="14">
          <parameters xmi:id="_gfcTLMaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTLcaDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5hcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(`NRIC`,''))) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`NRIC`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hPNjIMaDEeqC87dzZRfK1A" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_hPNjIcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_hPNjIsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hPNjI8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hPNjJMaDEeqC87dzZRfK1A" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hPNjJcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hPNjJsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hPNjJ8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hPNjKMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hPNjKcaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hPNjKsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hPNjK8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hPNjLMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hPNjLcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hPNjLsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hPNjL8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_gfcTLsaDEeqC87dzZRfK1A" computed="true" length="14">
          <parameters xmi:id="_gfcTL8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTMMaDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5hsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(`NRIC`,''))) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hPeo4MaDEeqC87dzZRfK1A" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_hPeo4caDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_hPeo4saDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_hPeo48aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hPeo5MaDEeqC87dzZRfK1A" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hPeo5caDEeqC87dzZRfK1A" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hPeo5saDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hPeo58aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hPeo6MaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hPeo6caDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hPeo6saDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hPeo68aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hPeo7MaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hPeo7caDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hPeo7saDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hPeo78aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_gfcTMcaDEeqC87dzZRfK1A" computed="true" length="15">
          <parameters xmi:id="_gfcTMsaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTM8aDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5gcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(`NRIC`)) FROM `demo_staging`.`customer` WHERE (`NRIC` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hOH-AMaDEeqC87dzZRfK1A" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_hOH-AcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_hOH-AsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hOH-A8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hOH-BMaDEeqC87dzZRfK1A" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hOH-BcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hOH-BsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hOH-B8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hOH-CMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hOH-CcaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hOH-CsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hOH-C8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hOH-DMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hOH-DcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hOH-DsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_gfcTNMaDEeqC87dzZRfK1A" computed="true" length="15">
          <parameters xmi:id="_gfcTNcaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTNsaDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5gsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(`NRIC`,''))) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`NRIC`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hOXOkMaDEeqC87dzZRfK1A" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_hOXOkcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_hOXOksaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hOXOk8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hOXOlMaDEeqC87dzZRfK1A" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hOXOlcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hOXOlsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hOXOl8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hOXOmMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hOXOmcaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_hOXOmsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hOXOm8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hOXOnMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hOXOncaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hOXOnsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hOXOn8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_gfcTN8aDEeqC87dzZRfK1A" computed="true" length="15">
          <parameters xmi:id="_gfcTOMaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTOcaDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5g8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(`NRIC`,''))) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hOslwMaDEeqC87dzZRfK1A" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_hOslwcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_hOslwsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_hOslw8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hOslxMaDEeqC87dzZRfK1A" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hOslxcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hOslxsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hOslx8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hOslyMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hOslycaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hOslysaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hOsly8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hOslzMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hOslzcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hOslzsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hOslz8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_gfcTOsaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="422.0">
          <parameters xmi:id="_gfcTO8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTPMaDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-SesaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(`NRIC`)), COUNT(*) FROM `demo_staging`.`customer` WHERE (`NRIC` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hNP0QMaDEeqC87dzZRfK1A" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_hNP0QcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_hNP0QsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hNP0Q8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hNP0RMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hNP0RcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hNP0RsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hNP0R8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hNP0SMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hNP0ScaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hNP0SsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hNP0S8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hNP0TMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hNP0TcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hNP0TsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_gfcTPcaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="422.0">
          <parameters xmi:id="_gfcTPsaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTP8aDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-Se8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(`NRIC`,''))), COUNT(*) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`NRIC`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hNoOwMaDEeqC87dzZRfK1A" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_hNoOwcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_hNoOwsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hNoOw8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hNoOxMaDEeqC87dzZRfK1A" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hNoOxcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hNoOxsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hNoOx8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hNoOyMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hNoOycaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hNoOysaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hNoOy8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hNoOzMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hNoOzcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hNoOzsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hNoOz8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_gfcTQMaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="422.0">
          <parameters xmi:id="_gfcTQcaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTQsaDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6lMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5gMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(`NRIC`,''))), COUNT(*) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hN4tcMaDEeqC87dzZRfK1A" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_hN4tccaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. "/>
            <taggedValue xmi:id="_hN4tcsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_hN4tc8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hN4tdMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hN4tdcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hN4tdsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hN4td8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hN4teMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hN4tecaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hN4tesaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hN4te8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hN4tfMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hN4tfcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hN4tfsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hN4tf8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_gfcTRMaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfcTRcaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV9EUcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM `demo_staging`.`customer` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hPwVsMaDEeqC87dzZRfK1A" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_hPwVscaDEeqC87dzZRfK1A" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_hPwVssaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_hPwVs8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_gfcTRsaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfcTR8aDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5h8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM `demo_staging`.`customer` WHERE `CUST_NAME` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hQANUMaDEeqC87dzZRfK1A" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_hQANUcaDEeqC87dzZRfK1A" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_hQANUsaDEeqC87dzZRfK1A" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_hQANU8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_gfcTSMaDEeqC87dzZRfK1A" count="30" computed="true" distinctValueCount="30">
        <parameters xmi:id="_gfcTScaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5iMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT DISTINCT `CUST_NAME` FROM `demo_staging`.`customer` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hQQE8MaDEeqC87dzZRfK1A" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_hQQE8caDEeqC87dzZRfK1A" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_hQQE8saDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_hQQE88aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_gfcTSsaDEeqC87dzZRfK1A" count="30" computed="true" uniqueValueCount="30">
        <parameters xmi:id="_gfcTS8aDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5icaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT `CUST_NAME`, COUNT(*) mycount FROM `demo_staging`.`customer`  GROUP BY `CUST_NAME` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hQn4YMaDEeqC87dzZRfK1A" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_hQn4YcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_hQn4YsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_hQn4Y8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_hQn4ZMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_hQn4ZcaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hQn4ZsaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_hQn4Z8aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hQn4aMaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_hQn4acaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_gfcTTMaDEeqC87dzZRfK1A" count="30" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_gfcTTcaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5isaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT `CUST_NAME`, COUNT(*) mycount FROM `demo_staging`.`customer`  m  GROUP BY `CUST_NAME` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hQ160MaDEeqC87dzZRfK1A" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_hQ160caDEeqC87dzZRfK1A" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_hQ160saDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_hQ1608aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_hQ161MaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_hQ161caDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hQ161saDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_hQ1618aDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hQ162MaDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_hQ162caDEeqC87dzZRfK1A" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_gfcTTsaDEeqC87dzZRfK1A" count="30" computed="true">
        <parameters xmi:id="_gfcTT8aDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5i8aDEeqC87dzZRfK1A" body="SELECT COUNT(`CUST_NAME`) FROM `demo_staging`.`customer` WHERE TRIM(`CUST_NAME`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_hREkUMaDEeqC87dzZRfK1A" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_hREkUcaDEeqC87dzZRfK1A" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_hREkUsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_hREkU8aDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_hREkVMaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_hREkVcaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_hREkVsaDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_hREkV8aDEeqC87dzZRfK1A" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_gfcTUMaDEeqC87dzZRfK1A">
        <parameters xmi:id="_gfcTUcaDEeqC87dzZRfK1A"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_gfcTUsaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="626.0">
          <parameters xmi:id="_gfcTU8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTVMaDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV-5jMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(`CUST_NAME`)), COUNT(`CUST_NAME`) FROM `demo_staging`.`customer` WHERE (`CUST_NAME` IS NOT NULL ) AND (TRIM(IFNULL(`CUST_NAME`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hRT04MaDEeqC87dzZRfK1A" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_hRT04caDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_hRT04saDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hRT048aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hRT05MaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hRT05caDEeqC87dzZRfK1A" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hRT05saDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hRT058aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hRT06MaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hRT06caDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hRT06saDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hRT068aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hRT07MaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hRT07caDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hRT07saDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hRT078aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_gfcTVcaDEeqC87dzZRfK1A" computed="true" length="34">
          <parameters xmi:id="_gfcTVsaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTV8aDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gkMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(`CUST_NAME`)) FROM `demo_staging`.`customer` WHERE (`CUST_NAME` IS NOT NULL ) AND (TRIM(IFNULL(`CUST_NAME`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hRkTkMaDEeqC87dzZRfK1A" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_hRkTkcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_hRkTksaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hRkTk8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hRkTlMaDEeqC87dzZRfK1A" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_hRkTlcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hRkTlsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hRkTl8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hRkTmMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hRkTmcaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_hRkTmsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hRkTm8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hRkTnMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hRkTncaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hRkTnsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hRkTn8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_gfcTWMaDEeqC87dzZRfK1A" computed="true" length="10">
          <parameters xmi:id="_gfcTWcaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTWsaDEeqC87dzZRfK1A" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gkcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(`CUST_NAME`)) FROM `demo_staging`.`customer` WHERE (`CUST_NAME` IS NOT NULL ) AND (TRIM(IFNULL(`CUST_NAME`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hR0LMMaDEeqC87dzZRfK1A" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_hR0LMcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_hR0LMsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_hR0LM8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hR0LNMaDEeqC87dzZRfK1A" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hR0LNcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hR0LNsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hR0LN8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hR0LOMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hR0LOcaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hR0LOsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hR0LO8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hR0LPMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hR0LPcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hR0LPsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hR0LP8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_gfcTW8aDEeqC87dzZRfK1A" computed="true" length="10">
          <parameters xmi:id="_gfcTXMaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTXcaDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gmMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(`CUST_NAME`)) FROM `demo_staging`.`customer` WHERE (`CUST_NAME` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hUbaUMaDEeqC87dzZRfK1A" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_hUbaUcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_hUbaUsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hUbaU8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hUbaVMaDEeqC87dzZRfK1A" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hUbaVcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hUbaVsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hUbaV8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hUbaWMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hUbaWcaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hUbaWsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hUbaW8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hUbaXMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hUbaXcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hUbaXsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_gfcTXsaDEeqC87dzZRfK1A" computed="true" length="10">
          <parameters xmi:id="_gfcTX8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTYMaDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gmcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(`CUST_NAME`,''))) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`CUST_NAME`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hVETgMaDEeqC87dzZRfK1A" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_hVETgcaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_hVETgsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hVETg8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hVEThMaDEeqC87dzZRfK1A" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hVEThcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hVEThsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hVETh8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hVETiMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hVETicaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hVETisaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hVETi8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hVETjMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hVETjcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hVETjsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hVETj8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_gfcTYcaDEeqC87dzZRfK1A" computed="true" length="10">
          <parameters xmi:id="_gfcTYsaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTY8aDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hWAHoMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(`CUST_NAME`,''))) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hVjbsMaDEeqC87dzZRfK1A" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_hVjbscaDEeqC87dzZRfK1A" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_hVjbssaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_hVjbs8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hVjbtMaDEeqC87dzZRfK1A" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hVjbtcaDEeqC87dzZRfK1A" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hVjbtsaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hVjbt8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hVjbuMaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hVjbucaDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hVjbusaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hVjbu8aDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hVjbvMaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hVjbvcaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hVjbvsaDEeqC87dzZRfK1A" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hVjbv8aDEeqC87dzZRfK1A" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_gfcTZMaDEeqC87dzZRfK1A" computed="true" length="34">
          <parameters xmi:id="_gfcTZcaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTZsaDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_glcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(`CUST_NAME`)) FROM `demo_staging`.`customer` WHERE (`CUST_NAME` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hTN5YMaDEeqC87dzZRfK1A" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_hTN5YcaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_hTN5YsaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hTN5Y8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hTN5ZMaDEeqC87dzZRfK1A" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hTN5ZcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hTN5ZsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hTN5Z8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hTN5aMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hTN5acaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hTN5asaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hTN5a8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hTN5bMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hTN5bcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hTN5bsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_gfcTZ8aDEeqC87dzZRfK1A" computed="true" length="34">
          <parameters xmi:id="_gfcTaMaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTacaDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_glsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(`CUST_NAME`,''))) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`CUST_NAME`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hT5O0MaDEeqC87dzZRfK1A" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_hT5O0caDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_hT5O0saDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hT5O08aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hT5O1MaDEeqC87dzZRfK1A" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hT5O1caDEeqC87dzZRfK1A" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hT5O1saDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hT5O18aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hT5O2MaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hT5O2caDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_hT5O2saDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hT5O28aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hT5O3MaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hT5O3caDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hT5O3saDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hT5O38aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_gfcTasaDEeqC87dzZRfK1A" computed="true" length="34">
          <parameters xmi:id="_gfcTa8aDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTbMaDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gl8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(`CUST_NAME`,''))) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hULisMaDEeqC87dzZRfK1A" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_hULiscaDEeqC87dzZRfK1A" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_hULissaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_hULis8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hULitMaDEeqC87dzZRfK1A" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hULitcaDEeqC87dzZRfK1A" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hULitsaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hULit8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hULiuMaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hULiucaDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hULiusaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hULiu8aDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hULivMaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hULivcaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hULivsaDEeqC87dzZRfK1A" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hULiv8aDEeqC87dzZRfK1A" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_gfcTbcaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="626.0">
          <parameters xmi:id="_gfcTbsaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTb8aDEeqC87dzZRfK1A"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gksaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(`CUST_NAME`)), COUNT(*) FROM `demo_staging`.`customer` WHERE (`CUST_NAME` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hSBmkMaDEeqC87dzZRfK1A" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_hSBmkcaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_hSBmksaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_hSBmk8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hSBmlMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hSBmlcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hSBmlsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hSBml8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hSBmmMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hSBmmcaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hSBmmsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hSBmm8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hSBmnMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hSBmncaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hSBmnsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_gfcTcMaDEeqC87dzZRfK1A" count="30" computed="true" sumLength="626.0">
          <parameters xmi:id="_gfcTccaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTcsaDEeqC87dzZRfK1A" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_gk8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(`CUST_NAME`,''))), COUNT(*) FROM `demo_staging`.`customer` WHERE (TRIM(IFNULL(`CUST_NAME`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hSUhgMaDEeqC87dzZRfK1A" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_hSVIkMaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_hSVIkcaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_hSVIksaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hSVIk8aDEeqC87dzZRfK1A" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hSVIlMaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hSVIlcaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hSVIlsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hSVIl8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hSVImMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hSVImcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hSVImsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hSVIm8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hSVInMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hSVIncaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hSVInsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_gfcTc8aDEeqC87dzZRfK1A" count="30" computed="true" sumLength="626.0">
          <parameters xmi:id="_gfcTdMaDEeqC87dzZRfK1A">
            <textParameter xmi:id="_gfcTdcaDEeqC87dzZRfK1A" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/Mysql_Staging_Demo_0.1.item#_dqs6mMaDEeqC87dzZRfK1A"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_hV_glMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(`CUST_NAME`,''))), COUNT(*) FROM `demo_staging`.`customer` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_hSzCoMaDEeqC87dzZRfK1A" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_hSzCocaDEeqC87dzZRfK1A" tag="Description" value="computes the average length of the field. "/>
            <taggedValue xmi:id="_hSzCosaDEeqC87dzZRfK1A" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_hSzCo8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_hSzCpMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_hSzCpcaDEeqC87dzZRfK1A" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_hSzCpsaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_hSzCp8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_hSzCqMaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_hSzCqcaDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_hSzCqsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_hSzCq8aDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_hSzCrMaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_hSzCrcaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_hSzCrsaDEeqC87dzZRfK1A" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_hSzCr8aDEeqC87dzZRfK1A" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
    </results>
    <parameters xmi:id="_Y_7NicaDEeqC87dzZRfK1A" dataFilter="_gfgkgMaDEeqC87dzZRfK1A" analysisType="Multiple Column Analysis"/>
    <contextType xmi:id="_gfYBoMaDEeqC87dzZRfK1A" confirmationNeeded="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <orgomg.cwm.objectmodel.core:Dependency xmi:id="_dmvdkP1rEeqkFIdyIp61ig" kind="Usage" supplier="_Y_7NgMaDEeqC87dzZRfK1A">
    <client xsi:type="dataquality.reports:TdReport" href="../../Reports/Demo/Customer_Basic_Analysis_0.1.rep#_IijNIN0hEeq5DJ9YiaafTg"/>
  </orgomg.cwm.objectmodel.core:Dependency>
  <dataquality.domain:Domain xmi:id="_gfgkgMaDEeqC87dzZRfK1A" name="Customer_Basic_Analysis">
    <ranges xmi:id="_gfgkgcaDEeqC87dzZRfK1A">
      <expressions xmi:id="_gfgkgsaDEeqC87dzZRfK1A">
        <expression xsi:type="relational:TdExpression" xmi:id="_gfgkg8aDEeqC87dzZRfK1A" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
